{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","util/storage.js","components/Footer.js","components/TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","todo","checkedClick","handleDestroyTodo","editTodo","editIndex","saveTodo","exitSaveTodo","className","classNames","isCompleted","id","type","value","title","checked","onChange","onDoubleClick","onClick","defaultValue","onKeyUp","e","key","target","trim","onBlur","TodoList","todoList","filter","filters","checkedAllClick","length","every","completed","htmlFor","map","TODOS_STORGAE_KEY","storage","JSON","parse","localStorage","getItem","todos","setItem","stringify","Footer","count","filterTodo","clearCompleted","href","active","TodoForm","useState","textInput","setTextInput","setTodoList","setfilter","setEditIndex","all","item","useEffect","addItem","useCallback","keyCode","v4","prevState","destroyTodo","placeholder","autoFocus","newTodoList","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.540055c2.chunk.js","sourcesContent":["import classNames from 'classnames'\r\nimport React from 'react'\r\n\r\nexport default function TodoItem({ \r\n    todo, \r\n    checkedClick, \r\n    handleDestroyTodo, \r\n    editTodo,\r\n    editIndex,\r\n    saveTodo,\r\n    exitSaveTodo\r\n}) {\r\n\r\n    return (\r\n        <li className={classNames({'completed': todo.isCompleted , 'editing': editIndex === todo.id})} >\r\n            <div className=\"view\">\r\n                <input \r\n                    className=\"toggle\" \r\n                    type=\"checkbox\"\r\n                    value={todo.title}\r\n                    checked={todo.isCompleted}\r\n                    onChange={() => checkedClick(todo.id,todo.isCompleted)}\r\n                />\r\n                <label onDoubleClick={() => editTodo(todo.id)} >{todo.title}</label>\r\n                <button className=\"destroy\" onClick={() => handleDestroyTodo(todo.id)} ></button>\r\n            </div>\r\n            <input \r\n                className=\"edit\" \r\n                defaultValue={todo.title} \r\n                onKeyUp={(e) => (e.key === 'Enter' && saveTodo(todo.id, e.target.value.trim(), todo.isCompleted)) || (e.key === 'Escape' && exitSaveTodo())} \r\n                onBlur={(e) => saveTodo(todo.id, e.target.value.trim(), todo.isCompleted)}\r\n            />\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TodoItem from './TodoItem'\r\n\r\nexport default function TodoList({ \r\n  todoList, \r\n  filter, \r\n  filters, \r\n  editTodo,\r\n  editIndex,\r\n  checkedClick, \r\n  checkedAllClick, \r\n  handleDestroyTodo,\r\n  saveTodo,\r\n  exitSaveTodo\r\n}) {\r\n    return (\r\n        <section className=\"main\">\r\n          <input \r\n            id=\"toggle-all\" \r\n            className=\"toggle-all\" \r\n            onChange={(e) => checkedAllClick(e.target.checked)} \r\n            type=\"checkbox\"\r\n            checked={todoList.length > 0 && todoList.every(filters.completed) && true}            \r\n          />\r\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n          <ul className=\"todo-list\">\r\n            {\r\n              todoList.filter(filters[filter]).map(todo => \r\n                <TodoItem \r\n                  key={todo.id} \r\n                  todo={todo} \r\n                  checkedClick={checkedClick}\r\n                  handleDestroyTodo={handleDestroyTodo}\r\n                  editTodo={editTodo}\r\n                  editIndex={editIndex}\r\n                  saveTodo={saveTodo}\r\n                  exitSaveTodo={exitSaveTodo}\r\n                />\r\n              )\r\n            }\r\n          </ul>\r\n        </section>\r\n    )\r\n}\r\n","const TODOS_STORGAE_KEY = 'TODOS'\r\n\r\nexport const storage = {\r\n    get(){\r\n        return JSON.parse(localStorage.getItem(TODOS_STORGAE_KEY)) || []\r\n    },\r\n    set(todos){\r\n        localStorage.setItem(TODOS_STORGAE_KEY,JSON.stringify(todos))\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default function Footer({ \r\n  count, \r\n  todoList, \r\n  filter, \r\n  filters, \r\n  filterTodo, \r\n  clearCompleted\r\n}) {\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n          <span className=\"todo-count\">\r\n            <strong>{count}</strong> item left\r\n          </span>\r\n            <ul className=\"filters\">\r\n              <li>\r\n                  <a className={filter === 'all' ? 'selected' : ''} \r\n                    onClick={() => filterTodo('all')} href=\"#/\">All\r\n                  </a>\r\n              </li>\r\n              <li>\r\n                  <a className={filter === 'active' ? 'selected': ''}  \r\n                    href=\"#/active\" \r\n                    onClick={() => filterTodo('active')}>Active\r\n                  </a>\r\n              </li>\r\n              <li>\r\n                  <a className={filter === 'completed' ? 'selected' : ''}  \r\n                    href=\"#/completed\" \r\n                    onClick={() => filterTodo('completed')}>Completed\r\n                  </a>\r\n              </li>\r\n            </ul>\r\n          {\r\n            todoList.filter(filters.completed).length > 0 && \r\n              <button className=\"clear-completed\" \r\n                onClick={() => clearCompleted(filters.active)}>Clear completed\r\n              </button>\r\n          }\r\n        </footer>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport TodoList from './TodoList'\r\nimport { storage } from './../util/storage';\r\nimport { v4 } from 'uuid';\r\nimport Footer from './Footer';\r\n\r\nexport default function TodoForm() {\r\n    const [textInput, setTextInput] = useState('')\r\n\r\n    const [todoList, setTodoList] = useState([])\r\n\r\n    const [filter, setfilter] = useState('all')\r\n\r\n    const [editIndex, setEditIndex] = useState(null)\r\n\r\n    const filters = {\r\n      all: () => true,\r\n      active: (item) => !item.isCompleted,\r\n      completed: (item) => item.isCompleted\r\n    }\r\n    \r\n    useEffect(() => {\r\n      setTodoList(storage.get())\r\n    },[])\r\n\r\n    useEffect(() => {\r\n      storage.set(todoList)\r\n    }, [todoList])\r\n\r\n\r\n    const textInputChange = (e) => {\r\n      setTextInput(e.target.value)\r\n    }\r\n\r\n    const filterTodo = (type) => {\r\n      setfilter(type)\r\n    }\r\n\r\n    const addItem = useCallback(\r\n      (e) => {\r\n        if(e.keyCode === 13) {\r\n          if(textInput){\r\n            setTodoList(\r\n              [\r\n                ...todoList,\r\n                {\r\n                  id: v4(),\r\n                  title: textInput,\r\n                  isCompleted: false\r\n                }\r\n              ]\r\n            )\r\n          }\r\n          setTextInput('')\r\n        }\r\n      },[textInput, todoList]\r\n    )\r\n\r\n    const checkedClick = useCallback(\r\n      (id, completed) => {\r\n        setTodoList(prevState => \r\n          prevState.map(todo => \r\n            todo.id === id ? { ...todo, isCompleted: !completed} : todo ))\r\n      },[]\r\n    )\r\n\r\n    const handleDestroyTodo = useCallback(\r\n      (id) => {\r\n        const destroyTodo = todoList.filter(todo => todo.id !== id)\r\n        setTodoList(destroyTodo)\r\n      },[todoList]\r\n    )\r\n\r\n    const checkedAllClick = useCallback(\r\n      (completed) => {\r\n        setTodoList(prevState =>\r\n          prevState.map(todo => \r\n            todo.isCompleted = {...todo, isCompleted: completed}))\r\n      },[]\r\n    )\r\n\r\n    const clearCompleted = (active) => {\r\n      const newTodoList = todoList.filter(active)\r\n      setTodoList(newTodoList)\r\n    }\r\n\r\n    const editTodo = (id) => {\r\n      setEditIndex(id)\r\n    }\r\n\r\n    const saveTodo = (id, title, isCompleted) => {\r\n      if(editIndex !== null) {\r\n        if(title) {\r\n          setTodoList(prevState => \r\n            prevState.map(todo => \r\n              todo.id === editIndex ? { id: id, title: title, isCompleted: isCompleted} : todo ))\r\n        }else {\r\n          handleDestroyTodo(id)\r\n        }\r\n        setEditIndex(null)\r\n      }\r\n    }\r\n\r\n    const exitSaveTodo = () => {\r\n      setEditIndex(null)\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <header className=\"header\">\r\n          <h1>todos</h1>\r\n          <input \r\n            className=\"new-todo\" \r\n            placeholder=\"What needs to be done?\" \r\n            autoFocus \r\n            value={textInput}\r\n            onChange={textInputChange}\r\n            onKeyUp={addItem}\r\n          />\r\n        </header>\r\n        {\r\n          todoList.length > 0 && \r\n          <TodoList \r\n            todoList={todoList}\r\n            filter={filter}\r\n            filters={filters}\r\n            editTodo={editTodo}\r\n            editIndex={editIndex}\r\n            checkedClick={checkedClick} \r\n            checkedAllClick={checkedAllClick}\r\n            handleDestroyTodo={handleDestroyTodo}\r\n            saveTodo={saveTodo}\r\n            exitSaveTodo={exitSaveTodo}\r\n          />\r\n        }\r\n        {\r\n          todoList.length > 0 &&\r\n            <Footer \r\n              count={todoList.filter(filters.active).length}\r\n              todoList={todoList}\r\n              filter={filter}\r\n              filters={filters}\r\n              filterTodo={filterTodo}\r\n              clearCompleted={clearCompleted}\r\n            />\r\n        }\r\n      </>\r\n    )\r\n}\r\n","\nimport TodoForm from './components/TodoForm'\n\nfunction App() {\n  return (\n    <section className=\"todoapp\">\n        <TodoForm />\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}